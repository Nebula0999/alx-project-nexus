# Render Blueprint Specification
# Docs: https://render.com/docs/infrastructure-as-code
# This file defines the infrastructure (services & databases) for Project Nexus.

databases:
  - name: nexus-postgres
    databaseName: ecommerce
    user: ecommerce
    plan: free # upgrade as needed

services:
  - type: web
    name: nexus-web
    runtime: python
    plan: free
    autoDeploy: true
    buildCommand: pip install -r requirements.txt && python manage.py collectstatic --noinput --verbosity 0
    startCommand: |
      python manage.py migrate --noinput && \
      gunicorn ecommerce.wsgi:application --bind 0.0.0.0:$PORT --workers ${GUNICORN_WORKERS:-3} --timeout ${GUNICORN_TIMEOUT:-60} --access-logfile - --error-logfile -
    healthCheckPath: /health/
    envVars:
      - key: DJANGO_SECRET_KEY
        value: REPLACE_WITH_SECURE_SECRET
      - key: DEBUG
        value: "0"
      - key: RUN_MIGRATIONS
        value: "1"  # Only the web service should run migrations
      - key: USE_GUNICORN
        value: "1"
      - key: GUNICORN_WORKERS
        value: "3"
      - key: GUNICORN_TIMEOUT
        value: "60"
      - key: CELERY_EAGER
        value: "false"
      - key: EMAIL_SILENT_FAIL
        value: "false"
      - key: EMAIL_BACKEND
        value: django.core.mail.backends.console.EmailBackend
      - key: DB_CONN_MAX_AGE
        value: "600"
      - key: ALLOWED_HOSTS
        value: "nexus-web.onrender.com,localhost,127.0.0.1"
      - key: SITE_URL
        value: https://nexus-web.onrender.com
      - key: SECURE_HSTS_SECONDS
        value: "63072000"
      - key: USE_DB_BEAT
        value: "0"  # Set to 1 to switch to django-celery-beat database scheduler
      - key: POSTGRES_DB
        fromDatabase:
          name: nexus-postgres
          property: database
      - key: POSTGRES_USER
        fromDatabase:
          name: nexus-postgres
          property: user
      - key: POSTGRES_PASSWORD
        fromDatabase:
          name: nexus-postgres
          property: password
      - key: POSTGRES_HOST
        fromDatabase:
          name: nexus-postgres
          property: host
      - key: POSTGRES_PORT
        fromDatabase:
          name: nexus-postgres
          property: port
      - key: DATABASE_URL
        fromDatabase:
          name: nexus-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: nexus-redis
          property: connectionString
      - key: REDIS_HOST
        value: nexus-redis
      - key: REDIS_PORT
        value: "6379"
      - key: REDIS_DB_CACHE
        value: "0"
      - key: REDIS_DB_BROKER
        value: "1"
      - key: REDIS_DB_RESULT
        value: "2"
      # Valkey placeholders (used only if you point to external Valkey instead of Render Redis)
      - key: VALKEY_HOST
        value: ""
      - key: VALKEY_PORT
        value: ""
      - key: VALKEY_PASSWORD
        value: ""
      # Email configuration (override these in a private environment or dashboard)
      - key: EMAIL_HOST
        value: smtp.gmail.com
      - key: EMAIL_PORT
        value: "587"
      - key: EMAIL_HOST_USER
        value: ""
      - key: EMAIL_HOST_PASSWORD
        value: ""
      - key: EMAIL_TIMEOUT
        value: "30"
      - key: DEFAULT_FROM_EMAIL
        value: ""
      - key: ACCOUNT_EMAIL_SUBJECT_PREFIX
        value: ""
      - key: EMAIL_INSECURE_SKIP_VERIFY
        value: "false"

  - type: worker
    name: nexus-worker
    runtime: python
    plan: free
    autoDeploy: true
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A ecommerce worker -l info
    envVars:
      - key: DJANGO_SECRET_KEY
        value: REPLACE_WITH_SECURE_SECRET
      - key: DEBUG
        value: "0"
      - key: RUN_MIGRATIONS
        value: "0"  # Avoid multiple services running migrations
      - key: USE_GUNICORN
        value: "1"
      - key: GUNICORN_WORKERS
        value: "3"
      - key: GUNICORN_TIMEOUT
        value: "60"
      - key: CELERY_EAGER
        value: "false"
      - key: EMAIL_SILENT_FAIL
        value: "false"
      - key: EMAIL_BACKEND
        value: django.core.mail.backends.console.EmailBackend
      - key: DB_CONN_MAX_AGE
        value: "600"
      - key: USE_DB_BEAT
        value: "0"
      - key: POSTGRES_DB
        fromDatabase:
          name: nexus-postgres
          property: database
      - key: POSTGRES_USER
        fromDatabase:
          name: nexus-postgres
          property: user
      - key: POSTGRES_PASSWORD
        fromDatabase:
          name: nexus-postgres
          property: password
      - key: POSTGRES_HOST
        fromDatabase:
          name: nexus-postgres
          property: host
      - key: POSTGRES_PORT
        fromDatabase:
          name: nexus-postgres
          property: port
      - key: DATABASE_URL
        fromDatabase:
          name: nexus-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: nexus-redis
          property: connectionString
      - key: REDIS_HOST
        value: nexus-redis
      - key: REDIS_PORT
        value: "6379"
      - key: REDIS_DB_CACHE
        value: "0"
      - key: REDIS_DB_BROKER
        value: "1"
      - key: REDIS_DB_RESULT
        value: "2"
      - key: VALKEY_HOST
        value: ""
      - key: VALKEY_PORT
        value: ""
      - key: VALKEY_PASSWORD
        value: ""

  - type: worker
    name: nexus-beat
    runtime: python
    plan: free
    autoDeploy: true
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A ecommerce beat -l info
    envVars:
      - key: DJANGO_SECRET_KEY
        value: REPLACE_WITH_SECURE_SECRET
      - key: DEBUG
        value: "0"
      - key: RUN_MIGRATIONS
        value: "0"
      - key: USE_GUNICORN
        value: "1"
      - key: GUNICORN_WORKERS
        value: "3"
      - key: GUNICORN_TIMEOUT
        value: "60"
      - key: CELERY_EAGER
        value: "false"
      - key: EMAIL_SILENT_FAIL
        value: "false"
      - key: EMAIL_BACKEND
        value: django.core.mail.backends.console.EmailBackend
      - key: DB_CONN_MAX_AGE
        value: "600"
      - key: USE_DB_BEAT
        value: "0"
      - key: POSTGRES_DB
        fromDatabase:
          name: nexus-postgres
          property: database
      - key: POSTGRES_USER
        fromDatabase:
          name: nexus-postgres
          property: user
      - key: POSTGRES_PASSWORD
        fromDatabase:
          name: nexus-postgres
          property: password
      - key: POSTGRES_HOST
        fromDatabase:
          name: nexus-postgres
          property: host
      - key: POSTGRES_PORT
        fromDatabase:
          name: nexus-postgres
          property: port
      - key: DATABASE_URL
        fromDatabase:
          name: nexus-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: nexus-redis
          property: connectionString
      - key: REDIS_HOST
        value: nexus-redis
      - key: REDIS_PORT
        value: "6379"
      - key: REDIS_DB_CACHE
        value: "0"
      - key: REDIS_DB_BROKER
        value: "1"
      - key: REDIS_DB_RESULT
        value: "2"
      - key: VALKEY_HOST
        value: ""
      - key: VALKEY_PORT
        value: ""
      - key: VALKEY_PASSWORD
        value: ""

  - type: redis
    name: nexus-redis
    plan: free
    maxmemoryPolicy: noeviction
    ipAllowList:
      - source: 0.0.0.0/0
        description: Allow all (adjust for tighter security in production)

# Notes:
# 1. Replace console email backend with a real provider for production (SendGrid, Mailgun, etc.).
# 2. For Gunicorn: update Dockerfile or dockerCommand to invoke gunicorn instead of Django's dev server.
# 3. Ensure Celery beat schedule references valid task paths (currently some placeholders may need updating).
# 4. Remove nexus-beat service if you do not use scheduled tasks yet.
